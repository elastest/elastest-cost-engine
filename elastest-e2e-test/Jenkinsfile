def elastest_url = ''
node('et_in_et') {
    elastest(tss: ['EUS'], surefireReportsPattern: '**/test-reports/TEST-*.xml', project: 'ETinET', sut: 11) {
        stage ('docker container')
            def mycontainer = docker.image('elastest/ci-docker-e2e-compose-py:latest')
            mycontainer.pull()
            mycontainer.inside()  {
                sh 'env'
                stage ('prepare test')
                    git 'https://github.com/elastest/elastest-cost-engine.git'
                    elastest.connect2ElastestNetwork()
                    //DEV_USER = "elastest"
                    //DEV_PASS = "3xp3r1m3nt47"
                    def elastestUser = elastest.getElasTestUser()
                    def elastestPass = elastest.getElasTestPassword()
                    elastest_url = env.ET_SUT_PROTOCOL + '://elastest:3xp3r1m3nt47@' + env.ET_SUT_HOST + ':' + env.ET_SUT_PORT
                    //elastest_url = 'http://elastest:3xp3r1m3nt47@nightly.elastest.io:37000'

                stage ("E2E tests")
                    try {
                        sh 'env'
                        sh 'pwd'
                        sh "cd elastest-e2e-test; mvn -B clean test -Duser=elastest -DetmUrl="+elastestURL //the full url should be parametrized (including protocol)
                    } catch(e) {
                        echo 'Err: ' + e.toString()
                    } finally {
                        step([$class: 'JUnitResultArchiver', testDataPublishers: [[$class: 'AttachmentPublisher']], testResults: '**/test-reports/TEST-*.xml'])
                    }
            }
    }
}